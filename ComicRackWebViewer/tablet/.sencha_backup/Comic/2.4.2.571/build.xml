<?xml version="1.0" encoding="utf-8"?>
<project name="Comic" default=".help">
    <!--
    The build-impl.xml file imported here contains the guts of the build process. It is
    a great idea to read that file to understand how the process works, but it is best to
    limit your changes to this file.
    -->
    <import file="${basedir}/.sencha/app/build-impl.xml"/>

    <!--
    The following targets can be provided to inject logic before and/or after key steps
    of the build process:

        The "init-local" target is used to initialize properties that may be personalized
        for the local machine.

            <target name="-before-init-local"/>
            <target name="-after-init-local"/>

        The "clean" target is used to clean build output from the build.dir.

            <target name="-before-clean"/>
            <target name="-after-clean"/>

        The general "init" target is used to initialize all other properties, including
        those provided by Sencha Cmd.

            <target name="-before-init"/>
            <target name="-after-init"/>
            
        The "page" target performs the call to Sencha Cmd to build the 'all-classes.js' file.

            <target name="-before-page"/>
            <target name="-after-page"/>

        The "build" target performs the call to Sencha Cmd to build the application.

            <target name="-before-build"/>
            <target name="-after-build"/>
    -->
    
    <!-- Specify preprocessor options -->
    <!--
    <target name="-before-init">
        <property name="build.options.production.debug" value="debug:false"/>
        <property name="build.options.production.logger" value="logger:true"/>
        <property name="build.options.production.minVersion" value="minVersion:3"/>
        <property name="build.options.production.product" value="product:touch"/>
        
        <property name="build.options.testing.debug" value="debug:false"/>
        <property name="build.options.testing.logger" value="logger:true"/>
        <property name="build.options.testing.minVersion" value="minVersion:3"/>
        <property name="build.options.testing.product" value="product:touch"/>
        
        <property name="build.options.package.debug" value="debug:false"/>
        <property name="build.options.package.logger" value="logger:true"/>
        <property name="build.options.package.minVersion" value="minVersion:3"/>
        <property name="build.options.package.product" value="product:touch"/>
        
        <property name="build.options.native.debug" value="debug:false"/>
        <property name="build.options.native.logger" value="logger:true"/>
        <property name="build.options.native.minVersion" value="minVersion:3"/>
        <property name="build.options.native.product" value="product:touch"/>
    </target>
    -->
    
<target name="-after-build"/>
    <target name="build"
            depends="init,-before-build,-build,-after-build"
            description="Copy over the font/ultimo folder and remove temp files"></target>


    <copy todir="${basedir}/resources/css/stylesheets/fonts/pictos" overwrite="true">
        <fileset dir="${basedir}/resources/sass/stylesheets/fonts/pictos">
            <include name="**/*"/>
        </fileset>
    </copy>
    <copy todir="${build.dir}/resources/css/stylesheets/fonts/pictos" overwrite="true">
        <fileset dir="${basedir}/resources/sass/stylesheets/fonts/pictos">
            <include name="**/*"/>
        </fileset>
    </copy>


    <copy todir="${basedir}/resources/images" overwrite="true">
        <fileset dir="${basedir}/resources/images">
            <include name="**/*"/>
        </fileset>
    </copy>
    <copy todir="${build.dir}/resources/images" overwrite="true">
        <fileset dir="${basedir}/resources/images">
            <include name="**/*"/>
        </fileset>
    </copy>


    <!-- bug fix for windows -->
    <copy todir="${basedir}/resources/icons" overwrite="true">
        <fileset dir="${basedir}/resources/icons">
            <include name="**/*"/>
        </fileset>
    </copy>
    <copy todir="${build.dir}/resources/icons" overwrite="true">
        <fileset dir="${basedir}/resources/icons">
            <include name="**/*"/>
        </fileset>
    </copy>
    <copy todir="${basedir}/resources/loading" overwrite="true">
        <fileset dir="${basedir}/resources/loading">
            <include name="**/*"/>
        </fileset>
    </copy>
    <copy todir="${build.dir}/resources/loading" overwrite="true">
        <fileset dir="${basedir}/resources/loading">
            <include name="**/*"/>
        </fileset>
    </copy>
    <copy todir="${basedir}/resources/startup" overwrite="true">
        <fileset dir="${basedir}/resources/startup">
            <include name="**/*"/>
        </fileset>
    </copy>
    <copy todir="${build.dir}/resources/startup" overwrite="true">
        <fileset dir="${basedir}/resources/startup">
            <include name="**/*"/>
        </fileset>
    </copy>
    <delete dir="${basedir}/${build.dir}"/>    
</project>
